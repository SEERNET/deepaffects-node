/**
 * DeepAffects
 * OpenAPI Specification of DeepAffects APIs
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DeepAffects);
  }
}(this, function(expect, DeepAffects) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DeepAffects.DiarizeApiV2();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DiarizeApiV2', function() {
    describe('asyncDiarizeAudio', function() {
      it('should call asyncDiarizeAudio successfully', function(done) {
        this.timeout(0);
        var defaultClient = DeepAffects.ApiClient.instance;

        // Configure API key authorization: UserSecurity
        var UserSecurity = defaultClient.authentications['UserSecurity'];
        UserSecurity.apiKey = process.env.API_KEY;


        var api = new DeepAffects.DiarizeApiV2();
        var audioFile = path.join(__dirname, '..', 'data', 'cnndebate.wav');
        var instance = DeepAffects.DiarizeAudio.fromFile(audioFile);
        var webhook = "http://your/webhook/"
        var callback = function(error, data, response) {
          if (error) {
            console.error(error);
          } else {
            console.log('API called successfully. Returned data: ' + data);
          }
          expect(data).to.be.a(DeepAffects.AsyncResponse);
        };
        
        api.asyncDiarizeAudio(instance, webhook, callback);
      });
    });
  });

}));
